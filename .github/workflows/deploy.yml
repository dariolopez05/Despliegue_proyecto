name: Deploy Symfony API with MySQL and Nginx

on:
    push:
        branches:
            - '*'

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout código
              uses: actions/checkout@v4

            - name: Iniciar sesión en Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            # Construir y subir imagen Symfony
            - name: Construir y subir imagen Symfony
              run: |
                  docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-app:latest -f src/.docker/php.Dockerfile src/
                  docker push ${{ secrets.DOCKER_USERNAME }}/symfony-app:latest

            # Construir y subir imagen Nginx
            - name: Construir y subir imagen Nginx
              run: |
                  docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-nginx:latest -f src/.docker/nginx.Dockerfile src/
                  docker push ${{ secrets.DOCKER_USERNAME }}/symfony-nginx:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build-and-push
        steps:
            - name: Checkout código
              uses: actions/checkout@v4

            - name: Verificar estructura del repositorio
              run: |
                  echo "Directorio actual: $(pwd)"
                  ls -R

            - name: Transferir el archivo compose.yml al servidor remoto
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.REMOTE_HOST }}
                  username: ${{ secrets.REMOTE_USER }}
                  key: ${{ secrets.REMOTE_KEY }}
                  source: "src/compose.yml"
                  target: "~/deploy/"

            - name: Instalar Docker y Docker Compose en el servidor remoto (si es necesario)
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.REMOTE_HOST }}
                  username: ${{ secrets.REMOTE_USER }}
                  key: ${{ secrets.REMOTE_KEY }}
                  script: |
                      if ! command -v docker &> /dev/null; then
                        echo "⚠️ Docker no encontrado. Instalando..."
                        sudo apt update
                        sudo apt install -y ca-certificates curl gnupg
                        sudo install -m 0755 -d /etc/apt/keyrings
                        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.gpg > /dev/null
                        sudo chmod a+r /etc/apt/keyrings/docker.gpg
                        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
                        sudo apt update
                        sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
                        sudo systemctl enable --now docker
                      else
                        echo "✅ Docker ya está instalado."
                      fi

                      if ! command -v docker compose &> /dev/null; then
                        echo "⚠️ Docker Compose no encontrado. Instalando..."
                        sudo apt install -y docker-compose-plugin
                      else
                        echo "✅ Docker Compose ya está instalado."
                      fi

            - name: Desplegar en servidor remoto
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.REMOTE_HOST }}
                  username: ${{ secrets.REMOTE_USER }}
                  key: ${{ secrets.REMOTE_KEY }}
                  script: |
                      sudo chmod 666 /var/run/docker.sock
                      echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

                      docker compose -f ~/deploy/src/compose.yml pull
                      docker compose -f ~/deploy/src/compose.yml down
                      docker compose -f ~/deploy/src/compose.yml up -d --force-recreate

            - name: Crear la base de datos si no existe y ejecutar migraciones
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.REMOTE_HOST }}
                  username: ${{ secrets.REMOTE_USER }}
                  key: ${{ secrets.REMOTE_KEY }}
                  script: |
                      docker exec symfony_app php bin/console doctrine:database:create --if-not-exists
                      docker exec symfony_app php bin/console doctrine:migrations:migrate --no-interaction
